- name: Install Docker on Debian 11
  hosts: host1,host2
  vars:
    client_image: sgumbe/yolo-latest:1.1.0
    backend_image: sgumbe/yolo-latest:1.2.0
    app_folder: /opt/yolo/
    compose_file_src: /home/gumbe12/tmp/docker-compose.yml
    compose_file_dest: "{{ app_folder }}/docker-compose.yml"
  tasks:
    - name: Update the cache
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install packages on Debian-based systems
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        update_cache: yes

    - name: Add Docker official GPG key to the system.
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add docker repository to the system
      apt_repository:
        repo: deb https://download.docker.com/linux/debian bullseye stable
        state: present

    - name: Update the cache
      apt:
        update_cache: yes

    - name: Install Docker-related packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
          - docker-compose
        update_cache: yes

    - name: Install the Docker module for Python, required by ansible
      pip:
        name: docker

    - name: Pull the client image
      community.docker.docker_image:
        name: "{{ client_image }}"
        source: pull

    - name: Pull the backend image
      community.docker.docker_image:
        name: "{{ backend_image }}"
        source: pull

    - name: Create app folder
      file:
        path: "{{ app_folder }}"
        state: directory

    - name: Create backend folder
      file:
        path: "{{ app_folder }}/backend"
        state: directory

    - name: Copy backend Dockerfile
      copy:
        src: /home/gumbe12/WEEK9-ANSIBLE/YOLO/backend/Dockerfile
        dest: "{{ app_folder }}/backend/Dockerfile"

    - name: Copy backend environment file
      copy:
        src: /home/gumbe12/WEEK9-ANSIBLE/YOLO/backend/.env
        dest: "{{ app_folder }}/backend/.env"
        
    - name: Copy docker-compose file to target hosts
      copy:
        src: "/home/gumbe12/WEEK9-ANSIBLE/YOLO/docker-compose.yml"
        dest: "{{ app_folder }}/docker-compose.yml"

    - name: Start containers
      shell: docker-compose up -d
      args:
        chdir: "{{ app_folder }}"
      register: compose_output
      changed_when: false

    - name: Check if containers are running
      shell: docker-compose ps --services --filter "status=running"
      args:
        chdir: "{{ app_folder }}"
      register: container_output

    - name: Print container status
      debug:
        var: container_output.stdout_lines

    - name: Verify backend container status
      assert:
        that:
          - "'backend' in container_output.stdout_lines"
        fail_msg: "Backend container is not running."
        success_msg: "Backend container is running."

    - name: Verify client container status
      assert:
        that:
          - "'client' in container_output.stdout_lines"
        fail_msg: "Client container is not running."
        success_msg: "Client container is running."


        

